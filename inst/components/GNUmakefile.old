#ifndef DUNCAN

  ifndef PROFILE
   PROFILE=lb0ds9ss.dev
  endif

  ifndef PROFILE_DIR
  PROFILE_DIR=$(HOME)/Library/Application\ Support/Firefox/Profiles/$(PROFILE)
  endif
  ifndef COMPONENT_DIR
  COMPONENT_DIR=/Applications/Firefox.app/Contents/MacOS/components/
  endif
  CXX=/usr/bin/c++
  CXX=g++

# Works with regular g++.  Have to leave off the -bundle in the linker flags.


  CPPFLAGS += $(shell R CMD config --cppflags ) \
            -fno-rtti  \
            -fno-exceptions  \
            -fPIC  \
	    -fshort-wchar \
	    -gstabs+       
$(warning "CPPFLAGS is " $(CPPFLAGS))

  ifndef GECKO_SDK
    GECKO_SDK=$(HOME)/Projects/Mozilla/mozilla-1.9.1/dist
  endif

#else

PROFILE_DIR=$(HOME)/.mozilla/firefox/8vzimmmn.default
ifndef MOZ192
MOZ191=1
endif

$(warning "MOZ191 is" $(MOZ191))
ifdef MOZ191
GECKO_SDK=$(HOME)/gabe/checkedout/FirefoxSource191/obj-xulrunner/dist/xulrunner-sdk
XPCOM_CORE_LOC=$(HOME)/gabe/checkedout/FirefoxSource191/obj-xulrunner/xpcom/build
else
$(warning "hi there") 
#going to try the non-PIC stuff for a sec
GECKO_SDK=/home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk
COMPONENT_DIR=/usr/lib64/firefox-3.6.12/components
endif
#endif
ifndef R_HOME
 R_HOME=$(shell R RHOME)
endif
R_HOME=/home/gmbecker/Downloads/R-2.12.2
XPIDL=$(GECKO_SDK)/bin/xpidl
#-DMOZILLA_STRICT_API 
GECKO_DEFINES=-DXPCOM_GLUE  -DXPCOM_GLUE_USE_NSPR -DMOZILLA_INTERNAL_API 
NEW_DEFINES= #-DMOZILLA_INTERNAL_API

GECKO_CONFIG_INCLUDE = -include mozilla-config.h 
GECKO_INCLUDES = -I$(GECKO_SDK)/include -I$(GECKO_SDK)/include/xpcom -I$(GECKO_SDK)/include/content -I$(GECKO_SDK)/include/widget -I$(GECKO_SDK)/include/dom -I$(GECKO_SDK)/include/layout -I$(GECKO_SDK)/sdk/include  -I$(GECKO_SDK)/include/string
GECKO_LDFLAGS =  -L$(GECKO_SDK)/lib -L$(GECKO_SDK)/bin -Wl,-rpath-link,$(GECKO_SDK)/bin -lxpcomglue_s  -lxpcom \
                 -lnspr4      \
                 -lplds4  \
                 -lplc4 #\
		 -lxul

#                 -bundle
# Can't use bundle if we use /usr/local/bin/g++ and -dynamiclib

# plc4 is just for GetServiceManager at this point.

R_INCLUDES=-I$(R_HOME)/include


R_LD_FLAGS=-L$(R_HOME)/lib -lR

LD_FLAGS=-shared

#NEW_LDFLAGS= -L/home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner-PIC/xpcom/build -L$(GECKO_SDK)/lib -lxul

#NEW_LDFLAGS= -L/usr/lib/xulrunner-1.9.2.12 -lxul


NEW_LDFLAGS= -L$(HOME)/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/lib -lnspr4 -lplc4 -lxpcom -lxul

NEW_LINKFLAGS=-Wl,-z,defs

NEW_LD_LOCS= -L$(GECKO_SDK)/bin -L$(GECKO_SDK)/lib -Wl,-rpath-link,$(GECKO_SDK)/bin

NEW_LD_LIBS= -lxpcom -lplc4 -lnspr4 -lxul

OBJ_FILES=Revaluator.o RevaluatorModule.o RVariants.o

ifdef DUNCAN
  DLIBEXT=dylib
else
  DLIBEXT=so
endif
Revaluator.h: Revaluator.idl
Revaluator.o: Revaluator.h Revaluator.cpp
Revaluator.$(DLIBEXT): $(OBJ_FILES)


%.h: %.idl
	$(XPIDL) -m header -I$(GECKO_SDK)/idl $<


# -Wall -Os
#%.o: %.cpp
#	$(CXX) -c -o $@ $(GECKO_CONFIG_INCLUDE) $(GECKO_DEFINES) $(GECKO_INCLUDES) $(R_INCLUDES)  $(CPPFLAGS) $(CXXFLAGS) $<

%.o: %.cpp
	$(CXX) -c -o $@ $(GECKO_CONFIG_INCLUDE) $(NEW_DEFINES) $(GECKO_INCLUDES) $(R_INCLUDES)  $(CPPFLAGS) $(CXXFLAGS) $<

#Revaluator.$(DLIBEXT): $(OBJ_FILES)
#	$(CXX) -Wall -Os -o $@ $^ $(LD_FLAGS) $(R_LD_FLAGS) $(GECKO_LDFLAGS) 

#Revaluator.$(DLIBEXT): $(OBJ_FILES)
#	$(CXX) -Wall $(NEW_LINKFLAGS) -Os -o $@ $^ $(LD_FLAGS) $(R_LD_FLAGS) $(NEW_LDFLAGS) 

#Revaluator.$(DLIBEXT): $(OBJ_FILES)
#	$(CXX) -Wall -Os -o $@ $(NEW_LD_LOCS) $(LD_FLAGS) $(R_LD_FLAGS) $(NEW_LINKFLAGS) $^ $(NEW_LD_LIBS)

Revaluator.$(DLIBEXT): $(OBJ_FILES)
	$(CXX) -Wall -Os $^ -L$(GECKO_SDK)/lib -L$(GECKO_SDK)/bin -Wl,-rpath-link,$(GECKO_SDK)/bin $(R_LD_FLAGS) $(LD_FLAGS) $(NEW_LINK_FLAGS) -lxpcomglue_s -lxpcom -lnspr4 -o $@

# How to build the type table information from the idl.
%.xpt: %.idl
	$(XPIDL) -m typelib -I$(GECKO_SDK)/idl $<

 # Put this into the relevant location that Firefox will find it.
 # Should be in the user's account.
install: Revaluator.xpt Revaluator.$(DLIBEXT)
	cp $^ $(COMPONENT_DIR)

 #  Clear the cache of the type information so that Firefox will
 #  rebuild it.
clearCache cleanCache:
	-rm  $(PROFILE_DIR)/compreg.dat $(PROFILE_DIR)/xpti.dat
