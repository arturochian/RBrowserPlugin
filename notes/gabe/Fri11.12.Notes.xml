<para>
So I finally got the python XPCOM extension that shipped with the
source code for 1.9.1 (but NOT 1.9.2) to build properly during the
mozilla build process by disabling javaXPCOM (the error that I
referenced last time was actually in java code, NOT cpp code so adding
ac_add_option --disable-javaxpcom prevented it from attempting to compile the broken code

I have saved the relevant parts of the build cycle to pythonbuild.log

</para>
<para>
Some quick observations about what I see before I try to replicate it:
They do NOT define MOZILLA_INTERNAL_API, even though they do use variants ...

Actually they only use nsIVariant.h, NOT nsVariant.h. They then go on to use nsIVariants without having to define MOZILLA_INTERNAL_API. Can we do this???

</para>
<para>
So when I changed from including nsVariant.h to nsIVariant.h, I suddenly can't build my .o files because malloc is undefined. There is /a/ version of malloc in stdlib.h/cstdlib.h, though I don't know if its the right one. I will try including that.
</para>

<para>
 when I included stdlib.h to define malloc it then complains about the following error for RVariants.cpp (the other two build into .o without complaining):
In file included from /home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsStringGlue.h:52,
                 from /home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsIAtom.h:17,
                 from /home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsINodeInfo.h:59,
                 from /home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsINode.h:45,
                 from /home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsIDocument.h:40,
                 from RVariants.cpp:5:
/home/gmbecker/gabe/checkedout/FirefoxSource192/obj-xulrunner/dist/xulrunner-sdk/include/nsStringAPI.h:1058: error: size of array ‘arg’ is negative
</para>
<para>
According to http://markmail.org/message/hgwyda3oruvorubl#query:related%3Ahgwyda3oruvorubl+page:1+mid:q4oqq22riczunmbv+state:results

A solution to this is to add -fshort-wchar to the compile line. I will try this.
</para>
<para>
Adding -fshort-wchar to CPPFLAGS causes all 3 .o files to build, though RVariants.o has multiple warnings about visibility:
eg:
warning: ‘nsCOMArray<nsINode>’ declared with greater visibility than its base ‘nsCOMArray_base’

</para>
<para>
Everything builds properly now following the instructions for dependent glue!!!

Now I just need to see if it will actually load into firefox.
</para>
<para>
It loads into firefox and the xpcom component is registered, but firefox routinely crashes to desktop on the following javascript code from within the go function in testR.js

        var args = ["R"];
        obj.init(args, 1);

</para>
