
These steps were performed in Snow Leopard 10.6.6 on x86_64 arch (hopefully replacing  x86_64 with i386 will work for 32 bit systems, but I cannot confirm).

1. Obtain Xcode 3.2 (Note, if you type gcc into the terminal and do not get an unknown command error you almost certainly already have Xcode). If you do not have it, it is available from the Mac appstore, but is a quite large download.
2. Obtain gfortran compiler from R.research.att.com/tools
3. Obtain and build R sources with the configuration option --enable-R-shlib (other than that follow instructions in  R Mac FAQ, this worked for both 2.12.2 and 2.13.1 as of writing)

4. Install the current version of Firefox (currently 6) . It doesn't have to be your main installation so long as you can get at it. You will need to know the directory it is installed into.
5. Obtain the Mozilla Xulrunner SDK (Also known as the Gecko SDK) for that version (curently 6.0). Check https://developer.mozilla.org/en/Gecko_SDK. It is available for all major modern architectures. If the version of the SDK is not available at that site, it will be available in ftp.mozilla.org/pub/xulrunner/releases/<release number>/sdk/
6. Unpack the RFirefox tarball
7. In the terminal type: 
   export DYLD_LIBRARY_PATH=<path-to-gecko-sdk>/bin 
8.  from the parent directory you unpacked RFirefox into type: 
    R CMD INSTALL --configure-args="--with-xul-sdk=<path to the sdk> --with-firefox=<location of firefox executable> --enable-mac" --preclean RFirefox
(5.5). If you have installed RFirefox before, in RFirefox/inst/components type 
       rm *.*o
       rm *.dylib
9. in RFirefox/inst/components type:
   make
10. All that is left is to open firefox with the correct environment variables set. You have 2 options:
   1. use RFirefox/inst/runfirefox.sh (this may require you to change the permissions on that file to allow execution, eg "chmod +x runfirefox.sh")
   2. type the following into the terminal:
      export R_HOME=<path-to-R-installation>
      export DYLD_LIBRARY_PATH=<path-to-xulrunner-sdk>/bin:$R_HOME/bin
      <path-to-firefox-executable>/firefox --no-remote -P dev
11. The first time you do this it will bring to you the profile creation screen for firefox. it is STRONGLY recommended that you create a separate profile for use with RFirefox as it is experimental and not yet fully stable (see AFAQ). runfirefox.sh and the instructions in 11.2 assume that you will name this profile "dev".
12. Open the relevent version of Firefox. Once Firefox is open, go to the file menu and open RFirefox/inst/RFirefox.xpi. This will install the extension then force you to restart. Repeat step 10 to restart firefox.
13. Open one of the test pages hosted on omegahat.org to confirm everything works.
